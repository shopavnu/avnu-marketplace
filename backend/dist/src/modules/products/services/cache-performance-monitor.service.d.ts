import { ConfigService } from '@nestjs/config';
import { EventEmitter2 } from '@nestjs/event-emitter';
export declare class CachePerformanceMonitorService {
  private readonly configService;
  private readonly eventEmitter;
  private readonly logger;
  private readonly isEnabled;
  private cacheHits;
  private cacheMisses;
  private cacheInvalidations;
  private cacheWarmingTime;
  private responseTimeWithCache;
  private responseTimeWithoutCache;
  constructor(configService: ConfigService, eventEmitter: EventEmitter2);
  recordCacheHit(): void;
  recordCacheMiss(): void;
  recordCacheInvalidation(): void;
  recordResponseTimeWithCache(timeMs: number): void;
  recordResponseTimeWithoutCache(timeMs: number): void;
  recordCacheWarmingTime(timeMs: number): void;
  getCacheHitRate(): number;
  getAverageResponseTimeWithCache(): number;
  getAverageResponseTimeWithoutCache(): number;
  getResponseTimeImprovement(): number;
  getMetrics(): {
    cacheHits: number;
    cacheMisses: number;
    cacheInvalidations: number;
    cacheHitRate: number;
    averageResponseTimeWithCache: number;
    averageResponseTimeWithoutCache: number;
    responseTimeImprovement: number;
    cacheWarmingTime: number;
    lastResetTime: Date;
  };
  private lastResetTime;
  resetMetrics(): void;
  logHourlyMetrics(): void;
  logDailyMetrics(): void;
  handleCacheHit(): void;
  handleCacheMiss(): void;
  handleCacheInvalidation(): void;
  handleCacheWarmingComplete(timeMs: number): void;
}
